<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chattingMapper">

	<select id="selectChatroom" resultMap="MessageResultSet">
		select *
		from chat_message
		join chat_room on(chat_message.chat_num = chat_room.chat_num)
		where chat_status = '0' and (sander = #{userId} or m_id = #{userId}) and sander not in #{userId}
	</select>
	
	<resultMap type="Chatroom" id="ChattingResultSet">
		<id column="CHAT_NUM" property="roomNum"/>
		<result column="CHAT_STATUS" property="roomStatus"/>
	</resultMap>
	
	<resultMap type="Message" id="MessageResultSet">
		<id column="MSG_NUM" property="msgNum"/>
		<result column="MSG_CONTENT" property="msgContent"/>
		<result column="MSG_TIME" property="msgTime"/>
		<result column="MSG_STATUS" property="msgStatus"/>
		<result column="SANDER" property="sander"/>
		<result column="M_ID" property="mId"/>
		<result column="CHAT_NUM" property="roomNum"/>
	</resultMap>
	
	<select id="selectMessage" resultMap="MessageResultSet">
		select *
		from chat_message
		join chat_room using(chat_num)
		where msg_status = '0' and (sander = #{userId} or m_id = #{userId}) and chat_num = #{roomNum}
	</select>
	
	<insert id="insertMessage">
		insert into chat_message
		values(chatmsg_seq.nextval, #{msg}, sysdate, default, CAST(#{roomNum} AS INTEGER), #{sander}, #{userId})
	</insert>
</mapper>
